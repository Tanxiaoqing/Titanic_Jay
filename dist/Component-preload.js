/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "titanic/Component-preload",
	"modules": {
		"titanic/model/models.js": "sap.ui.define([\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/Device\"\n], function(JSONModel, Device) {\n\t\"use strict\";\n\n\treturn {\n\n\t\tcreateDeviceModel: function() {\n\t\t\tvar oModel = new JSONModel(Device);\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\treturn oModel;\n\t\t}\n\n\t};\n});",
		"titanic/view/Welcome.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" controllerName=\"titanic.controller.Welcome\"\n\txmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<App>\n\t\t<pages>\n\t\t\t<Page title=\"{i18n>welcomeTitle}\">\n\t\t\t\t<content>\n\t\t\t\t\t\n\t\t\t\t</content>\n\t\t\t\t<footer>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</footer>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"titanic/view/Application.view.xml": "<mvc:View controllerName=\"titanic.controller.Application\" xmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:mvc=\"sap.ui.core.mvc\"\n\tdisplayBlock=\"true\" xmlns=\"sap.m\">\n\t<SplitApp id=\"splitApp\" class=\"sapUiDemoCart\"/>\n</mvc:View>",
		"titanic/view/ModelList.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" controllerName=\"titanic.controller.ModelList\"\n\txmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<Page title=\"{i18n>modelListTitle}\">\n\t\t<content>\n\t\t\t<List id=\"modelList\" noDataText=\"{i18n>modelNoData}\" busyIndicatorDelay=\"0\" items=\"{/MODELS}\">\n\t\t\t\t<items>\n\t\t\t\t\t<StandardListItem type=\"Active\" title=\"{DESCRIPTION}\" press=\"onModelItemPress\"/>\n\t\t\t\t</items>\n\t\t\t</List>\n\t\t</content>\n\t\t<footer>\n\t\t\t<Toolbar>\n\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t<Button text=\"Train New Model\" icon=\"sap-icon://create\" press=\"onNewModel\"></Button>\n\t\t\t</Toolbar>\n\t\t</footer>\n\t</Page>\n</mvc:View>",
		"titanic/view/ModelDetail.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" controllerName=\"titanic.controller.ModelDetail\"\n\txmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<Page title=\"{i18n>modelDetailTitle}\">\n\t\t<content>\n\t\t\t<!--<List id=\"modelDetailList\" noDataText=\"{i18n>modelNoData}\" busyIndicatorDelay=\"0\" items=\"{}\">\n\t\t\t\t<items>\n\t\t\t\t\t<StandardListItem type=\"Active\" title=\"{VARIABLE}\"/>\n\t\t\t\t</items>\n\t\t\t</List>-->\n\t\t\t<Label text=\"Description\" class=\"sapUiMediumMargin\"/>\n\t\t\t<Label text=\"{DESCRIPTION}\" class=\"sapUiMediumMargin\"/>\n\t\t\t<IconTabBar id=\"IconTabBar\" expanded=\"true\" class=\"sapUiResponsiveContentPadding\">\n\t\t\t\t<items>\n\t\t\t\t\t<IconTabFilter text=\"Importance Details\">\n\t\t\t\t\t\t<Table id=\"ImpDetailsTable\" items=\"{ }\">\n\t\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t\t<Column width=\"12em\">\n\t\t\t\t\t\t\t\t\t<Text text=\"VARIABLE\"/>\n\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t<Column width=\"12em\">\n\t\t\t\t\t\t\t\t\t<Text text=\"IMPORTANCE\"/>\n\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t<ColumnListItem>\n\t\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t\t<Text text=\"{VARIABLE}\"/>\n\t\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t\t<Text text=\"{IMPORTANCE}\"/>\n\t\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t<IconTabFilter text=\"Error Rate Details\">\n\t\t\t\t\t\t<Table id=\"ErrDetailsTable\" items=\"{ }\">\n\t\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t\t<Column width=\"12em\">\n\t\t\t\t\t\t\t\t\t<Text text=\"TREEINDEX\"/>\n\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t<Column width=\"12em\">\n\t\t\t\t\t\t\t\t\t<Text text=\"ERROR_RATE\"/>\n\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t<ColumnListItem>\n\t\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t\t<Text text=\"{TREEINDEX}\"/>\n\t\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t\t<Text text=\"{ERROR_RATE}\"/>\n\t\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t<IconTabFilter text=\"Test Results\">\n\t\t\t\t\t\t<Table id=\"TstResultsTable\" items=\"{ }\">\n\t\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t\t<Column width=\"12em\">\n\t\t\t\t\t\t\t\t\t<Text text=\"ACCURATE_RATE\"/>\n\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t<ColumnListItem>\n\t\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t\t<Text text=\"{ACCURATE_RATE}\"/>\n\t\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t</IconTabFilter>\n\t\t\t\t</items>\n\t\t\t</IconTabBar>\n\t\t</content>\n\t\t<footer>\n\t\t\t<Toolbar>\n\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t<Button text=\"Test Model\" icon=\"sap-icon://lab\" press=\"onTestModel\"></Button>\n\t\t\t</Toolbar>\n\t\t</footer>\n\t</Page>\n</mvc:View>",
		"titanic/view/Dialog.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\n\t<Dialog title=\"New Model\" class=\"sapUiContentPadding\" contentWidth=\"50%\">\n\t\t<content>\n\t\t\t<VBox>\n\t\t\t\t<HBox>\n\t\t\t\t\t<Label text=\"Description\" class=\"sapUiMediumMargin\"></Label>\n\t\t\t\t\t<Input id=\"newModelDesc\" class=\"sapUiSmallMargin\"></Input>\n\t\t\t\t</HBox>\n\t\t\t\t<HBox>\n\t\t\t\t\t<Label text=\"Tree Number\" class=\"sapUiMediumMargin\"></Label>\n\t\t\t\t\t<Input id=\"newModelTreeNum\" class=\"sapUiSmallMargin\"></Input>\n\t\t\t\t</HBox>\n\t\t\t</VBox>\n\t\t</content>\n\t\t<beginButton>\n\t\t\t<Button text=\"Close\" press=\"onCloseDialog\"/>\n\t\t</beginButton>\n\t\t<endButton>\n\t\t\t<Button text=\"Save\" press=\"onSaveNewModel\"/>\n\t\t</endButton>\n\t</Dialog>\n</core:FragmentDefinition>",
		"titanic/Component.js": "sap.ui.define([\n\t\"sap/ui/core/UIComponent\",\n\t\"sap/ui/Device\",\n\t\"titanic/model/models\"\n], function(UIComponent, Device, models) {\n\t\"use strict\";\n\n\treturn UIComponent.extend(\"titanic.Component\", {\n\n\t\tmetadata: {\n\t\t\tmanifest: \"json\"\n\t\t},\n\n\t\t/**\n\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\n\t\t * @public\n\t\t * @override\n\t\t */\n\t\tinit: function() {\n\t\t\t// call the base component's init function\n\t\t\tUIComponent.prototype.init.apply(this, arguments);\n\n\t\t\t// set the device model\n\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\n\t\t\t\n\t\t\t// set router\n\t\t\tthis.getRouter().initialize();\n\t\t\tthis._router = this.getRouter();\n\t\t},\n\t\t\n\t\tnavBack: function () {\n\t\t\tvar oHistory = sap.ui.core.routing.History.getInstance();\n\t\t\tvar oPrevHash = oHistory.getPreviousHash();\n\t\t\tif (oPrevHash !== undefined) {\n\t\t\t\twindow.history.go(-1);\n\t\t\t} else {\n\t\t\t\tthis._router.navTo(\"welcome\", {}, true);\n\t\t\t}\n\t\t}\n\t});\n});",
		"titanic/controller/ModelDetail.controller.js": "sap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\"\r\n], function(Controller) {\r\n\t\"use strict\";\r\n\r\n\treturn Controller.extend(\"titanic.controller.ModelDetail\", {\r\n\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf titanic.view.ModelDetail\r\n\t\t */\r\n\t\tonInit: function() {\r\n\t\t\tvar oComponent = this.getOwnerComponent();\r\n\t\t\tthis._router = oComponent.getRouter();\r\n\t\t\tthis._router.getRoute(\"model\").attachPatternMatched(this._onRouteMatched, this);\r\n\t\t},\r\n\r\n\t\t_onRouteMatched: function(oEvent) {\r\n\t\t\tvar oArgs, oView;\r\n\t\t\toArgs = oEvent.getParameter(\"arguments\");\r\n\t\t\toView = this.getView();\r\n\t\t\tthis._modelId = oArgs.id;\r\n\t\t\tvar sPath = \"/MODELS('\" + oArgs.id + \"')\";\r\n\t\t\t//var sPath = \"/MODEL_IMP_DETAIL\";\r\n\t\t\t//var oModel = oView.getModel();\r\n\t\t\t//var oData = oModel.getData(sPath);\r\n\t\t\tvar oModel = oView.getModel();\r\n\t\t\tvar oImpContext = oModel.getContext(sPath + \"/MODEL_IMP_DETAILS\");\r\n\t\t\tvar oErrContext = oModel.getContext(sPath + \"/MODEL_ERR_DETAILS\");\r\n\t\t\tvar oTstContext = oModel.getContext(sPath + \"/MODEL_TEST_RESULTS\");\r\n\t\t\t\r\n\t\t\tvar oImpDetailsTable = this.byId(\"ImpDetailsTable\");\r\n\t\t\toImpDetailsTable.setBindingContext(oImpContext);\r\n\t\t\t\r\n\t\t\tvar oErrDetailsTable = this.byId(\"ErrDetailsTable\");\r\n\t\t\toErrDetailsTable.setBindingContext(oErrContext);\r\n\t\t\t\r\n\t\t\tvar oTstResultsTable = this.byId(\"TstResultsTable\");\r\n\t\t\toTstResultsTable.setBindingContext(oTstContext);\r\n\r\n\t\t\toView.bindElement({\r\n\t\t\t\tpath: sPath,\r\n\t\t\t\t//filter: {path:\"MODEL_ID\", operator:\"EQ\", value1:oArgs.id },\r\n\t\t\t\t//parameters: {expand:'MODEL_IMP_DETAILS'},\r\n\t\t\t\tevents: {\r\n\t\t\t\t\tchange: this._onBindingChange.bind(this),\r\n\t\t\t\t\tdataRequested: function() {\r\n\t\t\t\t\t\toView.setBusy(true);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdataReceived: function() {\r\n\t\t\t\t\t\toView.setBusy(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t_onBindingChange: function(oEvent) {\r\n\t\t\t//var oElementBinding = this.getView().getElementBinding();\r\n\t\t\t// No data for the binding\r\n\t\t\t//if (oElementBinding && !oElementBinding.getBoundContext()) {\r\n\t\t\t//\tthis.getRouter().getTargets().display(\"notFound\");\r\n\t\t\t//}\r\n\t\t},\r\n\t\t\r\n\t\tonTestModel: function( ){\r\n\t\t\tvar para = \"?\";\r\n\t\t\tpara += \"MODEL_ID=\";\r\n\t\t\tpara += this._modelId;\r\n\t\t\t$.ajax({\r\n\t\t\t\turl: \"/TITANIC_TEST_MODEL\" + para,\r\n\t\t\t\tasync: false\r\n\t\t\t});\r\n\t\t\tthis.byId(\"TstResultsTable\").getBinding(\"items\").refresh(true);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered\r\n\t\t * (NOT before the first rendering! onInit() is used for that one!).\r\n\t\t * @memberOf titanic.view.ModelDetail\r\n\t\t */\r\n\t\t//\tonBeforeRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.\r\n\t\t * This hook is the same one that SAPUI5 controls get after being rendered.\r\n\t\t * @memberOf titanic.view.ModelDetail\r\n\t\t */\r\n\t\t//\tonAfterRendering: function() {\r\n\t\t//\t\tvar a = null;\r\n\t\t//\t}\r\n\r\n\t\t/**\r\n\t\t * Called when the Controller is destroyed. Use this one to free resources and finalize activities.\r\n\t\t * @memberOf titanic.view.ModelDetail\r\n\t\t */\r\n\t\t//\tonExit: function() {\r\n\t\t//\r\n\t\t//\t}\r\n\r\n\t});\r\n\r\n});",
		"titanic/controller/Welcome.controller.js": "sap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\"\r\n], function(Controller) {\r\n\t\"use strict\";\r\n\r\n\treturn Controller.extend(\"titanic.controller.Welcome\", {\r\n\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf titanic.view.Welcome\r\n\t\t */\r\n\t\t//\tonInit: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered\r\n\t\t * (NOT before the first rendering! onInit() is used for that one!).\r\n\t\t * @memberOf titanic.view.Welcome\r\n\t\t */\r\n\t\t//\tonBeforeRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.\r\n\t\t * This hook is the same one that SAPUI5 controls get after being rendered.\r\n\t\t * @memberOf titanic.view.Welcome\r\n\t\t */\r\n\t\t//\tonAfterRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the Controller is destroyed. Use this one to free resources and finalize activities.\r\n\t\t * @memberOf titanic.view.Welcome\r\n\t\t */\r\n\t\t//\tonExit: function() {\r\n\t\t//\r\n\t\t//\t}\r\n\r\n\t});\r\n\r\n});",
		"titanic/controller/Application.controller.js": "sap.ui.define([\n\t\"sap/ui/core/mvc/Controller\"\n], function(Controller) {\n\t\"use strict\";\n\n\treturn Controller.extend(\"titanic.controller.Application\", {\n\n\t});\n});",
		"titanic/controller/ModelList.controller.js": "sap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\"\r\n], function(Controller) {\r\n\t\"use strict\";\r\n\r\n\treturn Controller.extend(\"titanic.controller.ModelList\", {\r\n\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf titanic.view.ModelList\r\n\t\t */\r\n\t\tonInit: function() {\r\n\t\t\tvar oComponent = this.getOwnerComponent();\r\n\t\t\tthis._router = oComponent.getRouter();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered\r\n\t\t * (NOT before the first rendering! onInit() is used for that one!).\r\n\t\t * @memberOf titanic.view.ModelList\r\n\t\t */\r\n\t\t//\tonBeforeRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.\r\n\t\t * This hook is the same one that SAPUI5 controls get after being rendered.\r\n\t\t * @memberOf titanic.view.ModelList\r\n\t\t */\r\n\t\t//\tonAfterRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the Controller is destroyed. Use this one to free resources and finalize activities.\r\n\t\t * @memberOf titanic.view.ModelList\r\n\t\t */\r\n\t\t//\tonExit: function() {\r\n\t\t//\r\n\t\t//\t}\r\n\r\n\t\tonModelItemPress: function(oEvent) {\r\n\t\t\tvar oBindContext;\r\n\t\t\toBindContext = oEvent.getSource().getBindingContext();\r\n\t\t\tvar oModel = oBindContext.getModel();\r\n\t\t\tvar sModelId = oModel.getData(oBindContext.getPath()).ID;\r\n\t\t\tthis._router.navTo(\"model\", {\r\n\t\t\t\tid: sModelId\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tonNewModel: function( ) {\r\n\t\t\tif (!this._oDialog) {\r\n\t\t\t\tthis._oDialog = sap.ui.xmlfragment(\"titanic.view.Dialog\", this);\r\n\t\t\t\tthis.getView().addDependent(this._oDialog);\r\n\t\t\t}\r\n\t\t\tthis._oDialog.open();\r\n\t\t},\r\n\r\n\t\tonCloseDialog: function( ) {\r\n\t\t\tthis._oDialog.close();\r\n\t\t},\r\n\t\t\r\n\t\tonSaveNewModel: function( ){\r\n\t\t\tvar desc = sap.ui.getCore().byId(\"newModelDesc\").getValue();\r\n\t\t\tvar treenum = sap.ui.getCore().byId(\"newModelTreeNum\").getValue();\r\n\t\t\tvar para = \"?\";\r\n\t\t\tpara += \"DESC=\";\r\n\t\t\tpara += desc;\r\n\t\t\tpara += \"&\";\r\n\t\t\tpara += \"TREENUM=\";\r\n\t\t\tpara += treenum;\r\n\t\t\t$.ajax({\r\n\t\t\t\turl: \"/TITANIC_TRAIN_MODEL\" + para,\r\n\t\t\t\tasync: false\r\n\t\t\t});\r\n\t\t\tthis.byId(\"modelList\").getBinding(\"items\").refresh(true);\r\n\t\t\tthis._oDialog.close();\r\n\t\t}\r\n\t});\r\n\r\n});"
	}
});